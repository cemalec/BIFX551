Class 1/38/2020
functions(argument)
eg: mean(1:3)
1 2 3
1:3 shortcut in r to make a list of numbers

> 1:6+1
[1] 2 3 4 5 6 7
> 1:6+1:6
[1]  2  4  6  8 10 12
> 1:3 * 1:3
[1] 1 4 9

Boolean TRUE, FALSE are capitalized

sample( 1:6, size, replace=TRUE)
> sample(1:6,size=2,replace=TRUE)
[1] 5 3

Data types:
(0) boolean, integer, float, strings(char)
(1) atomic vector myvector=c(1,2,3,4)  Same type for each element
> c("a","c","g","t")
[1] "a" "c" "g" "t"
> c("a","c","g",1)
[1] "a" "c" "g" "1"

a list is a vector that can hold multiple data types

(2) matrices matrix( c(1,2,3,4),nrows=2)
  > matrix( c(1,2,3,4),nrow=2)
       [,1] [,2]
  [1,]    1    3
  [2,]    2    4

(3) arrays - multiple dimensions
(4) factors 2cyl, 4cyl, 6cyl   mice=m,f  
(5) DataFrame has named columns and rows if needed. 

logging into the slurm server:  ssh dtv1@144.175.88.21
SLURM
srun --pty R

> help(sample)sample                  package:base                   R Documentation

Random Samples and Permutations

Description:

     ‘sample’ takes a sample of the specified size from the elements of
     ‘x’ using either with or without replacement.

Usage:

     sample(x, size, replace = FALSE, prob = NULL)

     sample.int(n, size = n, replace = FALSE, prob = NULL,
                useHash = (!replace && is.null(prob) && size <= n/2 && n > 1e7))

Arguments:

       x: either a vector of one or more elements from which to choose,
          or a positive integer.  See ‘Details.’

       n: a positive number, the number of items to choose from.  See
          ‘Details.’

    size: a non-negative integer giving the number of items to choose.

 replace: should sampling be with replacement?

    prob: a vector of probability weights for obtaining the elements of
          the vector being sampled.

 useHash: ‘logical’ indicating if the hash-version of the algorithm
          should be used.  Can only be used for ‘replace = FALSE’,
          ‘prob = NULL’, and ‘size <= n/2’, and really should be used
          for large ‘n’, as ‘useHash=FALSE’ will use memory
          proportional to ‘n’.

Details:....

Show datasets that are available

data()  
 data()
iris3                   Edgar Anderson's Iris Data
islands                 Areas of the World's Major Landmasses
ldeaths (UKLungDeaths)
                        Monthly Deaths from Lung Diseases in the UK
lh                      Luteinizing Hormone in Blood Samples
longley                 Longley's Economic Regression Data
lynx                    Annual Canadian Lynx trappings 1821-1934
mdeaths (UKLungDeaths)
                        Monthly Deaths from Lung Diseases in the UK
morley                  Michelson Speed of Light Data
mtcars                  Motor Trend Car Road Tests
nhtemp                  Average Yearly Temperatures in New Haven
nottem                  Average Monthly Temperatures at 
...

=============================================================================
FUNCTIONS

my_function<-function() { 
  return('return')
}

> my_function<-function(argument) {
  return(argument)
  }
  
  > my_function<-function(argument) {answer<-argument*2;return(answer)}
> my_function(2)
[1] 4

==loading from cloud
>source('/cloud/project/function.R')

==loading from homedir
>source('~/function.R')

### reading .csv files from the internet

> url<-"https://raw.githubusercontent.com/cemalec/BIFX551/master/week3/SYB62_1_201907_Population%2C%20Surface%20Area%20and%20Density.csv"
> url
[1] "https://raw.githubusercontent.com/cemalec/BIFX551/master/week3/SYB62_1_201907_Population%2C%20Surface%20Area%20and%20Density.csv"
> download.file(url,"population.csv")
trying URL 'https://raw.githubusercontent.com/cemalec/BIFX551/master/week3/SYB62_1_201907_Population%2C%20Surface%20Area%20and%20Density.csv'
Content type 'text/plain; charset=utf-8' length 1997846 bytes (1.9 MB)
==================================================
downloaded 1.9 MB

> mr-<-"https://raw.githubusercontent.com/cemalec/BIFX551/master/week3/MRI.txt"
Error: unexpected assignment in "mr-<-"
> mri<-"https://raw.githubusercontent.com/cemalec/BIFX551/master/week3/MRI.txt"
> download.file(mri, "mri.txt")
trying URL 'https://raw.githubusercontent.com/cemalec/BIFX551/master/week3/MRI.txt'
Content type 'text/plain; charset=utf-8' length 141313 bytes (138 KB)
==================================================
downloaded 138 KB

> pop_df<-read.csv("population.csv")
> dim(pop_df)
[1] 7352    7

## this does not work because the delim is not indicated
> mri_df<-read.delim("mri.txt")
> View(mri_df)

## This does not work because the delim for white space is "", not " "
> mri_df<-read.delim("mri.txt",sep=" ")
Error in read.table(file = file, header = header, sep = sep, quote = quote,  : 

## This works!!
  more columns than column names
> mri_df<-read.delim("mri.txt",sep="")

### Reading in files (for giant files ) ###
f<-file('mri.txt')
### read 1 line
> readLines(con=f, n=1)

### read 100 lines
> readLines(con=f, n=100)
### keep reading until the file ends
character(0)
### can't just repopen the file
> open(f)
Warning message:
In open.connection(f) : connection is already open
> close(f)
> open(f)
Error in open.connection(f) : invalid connection

## this works to re-open the file
> f<-file('mri.txt')
> open(f)

## plot()
## barplot()
## hist(plot)


WEEK 4  ( Feb 11 )
R-markdown & knitr

```{r cars}
{summary (cars)
```

Assignment, render to PDF

Find Three biological data sources that you can use for your first project. 
For each write about why you find the dataset interesting, anticipated difficulties, 
and a question you would like to answer. Perform a precursory exploration 
(types and amount of different variables and a simple graph) for each dataset
and turn in an R Markdown document.

library(tidyr)  - spread & gather data to fix raw data
## Columns are variables, each row has the same kinds of data.   
## Tidy data is good for analysis

## this will take rows that do not belong and move the to Columns.
wide_pop_df<-pivot_wide(data=pop_df, names_from='Series',values_from='Value')

Going to other direction, pivot_longer() 
Used for presentation.
long_mri_df<-pivot_longer(data=mri_bf,cols=c('age','male','race','weight'),names_to='DemoInfo', values_to='Value')

using the %>% pipe
pop_df %>% pivot_wider(names_from='Series', values_from='Value')
%>%  pipe -- Redirect
x %>% f(y)   is the same as 
f(x,y)

library(dplyr)  
Can filter rows, 
arrange, 
select (choose columns)
mutate  (calculated columns)

Notation to filter rows 1..input$range and columns 1..14
ncov_df[c(1:input$range),c(1:14)]

farming_df<-filter(swiss, Agriculture > 50)
view(farming_df)
# select some columns
some_df<-select( farming_df, c(1,2,3 ))

# Add a computed column
swiss %>% mutate(Protestant=100-Catholic)

## use iris to show groups and summary functions
iris %>% group_by(Species) %>% summarise(mean_petal=mean(Petal.Length))

# A tibble: 3 x 2
#    Species    mean_petal
#    <fct>           <dbl>
#  1 setosa           1.46
#  2 versicolor       4.26
#  3 virginica        5.55

> count_iris_df<-iris %>% group_by(Species) %>% summarise(count=n())
> count_iris_df
# A tibble: 3 x 2
  Species    count
  <fct>      <int>
1 setosa        50
2 versicolor    50
3 virginica     50

> mtcars
                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb
Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
> mtcars %>% group_by(am) %>% summarize(count=n())
# A tibble: 2 x 2
     am count
  <dbl> <int>
1     0    19
2     1    13


Statistical Report
- Data wrangling, and cleaning step
- Exploritory Analysis
- Model Building
- Communication

- Confidence interval is preferred over P-value


## cleaning up data
EWS.T1 EWS.T2 EWS.T3 EWS.T4 ...EWS.T19   
EWS_df <- khan_df %>% select(starts_with('EWS'))  ## ends_with() contains(literal string) matches(regular expression)
CEWS_df<- khan_df %>% select(matches('*[\.T]*'))


GGPLOT2
g<-ggplot(data=diamonds, mapping=aes(x=carat, y=price,color=color))+geom_point()
print(g)
g<-ggplot(data=diamonds, mapping=aes(x=carat, y=price,color=color,size=carat))+geom_point()


PROJECT GRADING
Wrangle       -       10  automatically download from source. Provide the file used for data. (ETL) 
  Extract Trace Load
Explore       -       30  Summary Statistics
                          Labelled, useful graph
Model         -       20  
Communicate   -       30  knitr document & slides (powerpoint->pdf)
Slides & Presentation 10pts

T-Test with R
Compare 2 means of paired, and unpaired variables
Box plot,   to see the 2 means

Difference between two means
                         T
horses$temp |      T    [X]
            |     [X]    |
            +______|___________
                 young old
t.test( horses$temp~horses$age)
t.test( young, old )
paired
t.test( childhorse, parenthorse)
t.test( younghorsex, adultx )
t.test( younghorse, mean=40 )

PAIRED  
Find mean of difference for each pair









